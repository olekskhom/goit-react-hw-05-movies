{"version":3,"file":"static/js/170.e96ca4e6.chunk.js","mappings":"8MAEO,SAAeA,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAQC,GAAnC,uEACY,gCACD,mCAFX,SAIQC,EAAAA,EAAAA,IAAA,UAHI,iCAGJ,OACGF,EADH,oBAFG,mCAEH,YACgCC,EADhC,oBAJR,0G,uLCCME,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4GAMVE,EAAUF,EAAAA,GAAAA,IAAH,mKASPG,EAAQH,EAAAA,GAAAA,GAAH,gDAILI,EAASJ,EAAAA,GAAAA,GAAH,gDAINK,EAAUL,EAAAA,GAAAA,QAAH,gFAMPM,EAAON,EAAAA,GAAAA,EAAH,yFAMJO,EAAOP,EAAAA,GAAAA,GAAH,8G,SCiDjB,EAzEqB,WAAO,IAAD,IACjBQ,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAG3D,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMvB,EAAM,gBAAYY,GADV,wCAEd,gHAE2Bb,EAAAA,EAAAA,GAAYC,GAFvC,gBAEYwB,EAFZ,EAEYA,KACRF,EAASE,GAHb,gDAKIC,QAAQC,IAAR,MALJ,0DAFc,0DAUdC,EACD,GAAE,CAACf,IAEJ,IAAqBgB,EAMrB,OACE,4BACE,UAACtB,EAAD,YACE,SAAC,MAAD,KACA,SAACH,EAAD,CAAY0B,GAAIb,EAAoBc,QAApC,yBAEF,UAACrB,EAAD,YACE,gBACEsB,IAAKV,EAAMW,YA9BP,kCA8B2BX,EAAMW,YAAc,GACnDC,IAAKZ,EAAMa,MACXC,MAAM,MACNC,OAAO,SAET,4BACE,UAAC7B,EAAD,WACGc,EAAMa,MADT,KApBaN,EAqBiBP,EAAMgB,aApBxB,IAAIC,KAAKV,GACJW,eAkBjB,QAGA,UAAC7B,EAAD,2BAAyC,GAArBW,EAAMmB,cAAmBC,UAA7C,QACA,SAACjC,EAAD,wBACA,SAACE,EAAD,UAAOW,EAAMqB,YACb,SAAClC,EAAD,sBACA,SAACE,EAAD,UACGW,EAAMsB,OACHtB,EAAMsB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAC3C,YAIV,gCACE,oDACA,2BACE,SAACpC,EAAD,WACE,SAAC,KAAD,CAAMkB,GAAG,OAAT,qBAEF,SAAClB,EAAD,WACE,SAAC,KAAD,CAAMkB,GAAG,UAAT,2BAGJ,SAAC,EAAAmB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C","sources":["API/themoviedbApi.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchMovies(params, query) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const API_KEY = '83c7fa62ddc3adeb807030d6ee731236';\n\n  return await axios.get(\n    `${BASE_URL}${params}?api_key=${API_KEY}&${query}&language=en-US`\n  );\n}","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  font-size: 25px;\n  font-weight: 600;\n  text-decoration: none;\n`;\nexport const Wrapper = styled.div`\n  width: 120px;\n  font-size: 20px;\n  color: black;\n  margin-bottom: 20px;\n  cursor: pointer;\n  border: 4px solid rgb(206, 187, 218);\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 15px;\n`;\n\nexport const Title2 = styled.h3`\n  margin-bottom: 15px;\n`;\n\nexport const Article = styled.article`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const Text = styled.p`\n  font-size: 19px;\n  font-weight: 400;\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  font-size: 19px;\n  font-weight: 500;\n\n  &:first-child {\n  margin-bottom: 10px;\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovies } from 'API/themoviedbApi';\nimport { BiArrowBack } from 'react-icons/bi';\nimport {\n  StyledLink,\n  Wrapper,\n  Title,\n  Title2,\n  Text,\n  Item,\n  Article,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const url = 'https://image.tmdb.org/t/p/w500';\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    const params = `movie/${movieId}`;\n    async function featch() {\n      try {\n        const { data } = await fetchMovies(params);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    featch();\n  }, [movieId]);\n\n  const getYearMovie = date => {\n    const dateMovie = new Date(date);\n    const year = dateMovie.getFullYear();\n    return year;\n  };\n\n  return (\n    <div>\n      <Wrapper>\n        <BiArrowBack />\n        <StyledLink to={backLinkLocationRef.current}>go back</StyledLink>\n      </Wrapper>\n      <Article>\n        <img\n          src={movie.poster_path ? url + movie.poster_path : ''}\n          alt={movie.title}\n          width=\"350\"\n          height=\"450\"\n        />\n        <div>\n          <Title>\n            {movie.title}({getYearMovie(movie.release_date)})\n          </Title>\n          <Text>User Score: {(movie.vote_average * 10).toFixed()}%</Text>\n          <Title2>Overview</Title2>\n          <Text>{movie.overview}</Text>\n          <Title2>Genres</Title2>\n          <Text>\n            {movie.genres\n              ? movie.genres.map(genre => genre.name).join(' ')\n              : ''}\n          </Text>\n        </div>\n      </Article>\n      <section>\n        <h3>Additional information</h3>\n        <ul>\n          <Item>\n            <Link to=\"cast\">Cast</Link>\n          </Item>\n          <Item>\n            <Link to=\"reviews\">Reviews</Link>\n          </Item>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </section>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchMovies","params","query","axios","StyledLink","styled","NavLink","Wrapper","Title","Title2","Article","Text","Item","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movie","setMovie","useEffect","data","console","log","featch","date","to","current","src","poster_path","alt","title","width","height","release_date","Date","getFullYear","vote_average","toFixed","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}